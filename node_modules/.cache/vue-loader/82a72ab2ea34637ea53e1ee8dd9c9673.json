{"remainingRequest":"/Users/xiangliu/Development/Projects/xxx/apera-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xiangliu/Development/Projects/xxx/apera-frontend/src/views/Manage/ManageProduct.vue?vue&type=style&index=0&id=8bfc708c&lang=less&scoped=true&","dependencies":[{"path":"/Users/xiangliu/Development/Projects/xxx/apera-frontend/src/views/Manage/ManageProduct.vue","mtime":1585924368533},{"path":"/Users/xiangliu/Development/Projects/xxx/apera-frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xiangliu/Development/Projects/xxx/apera-frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/xiangliu/Development/Projects/xxx/apera-frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/xiangliu/Development/Projects/xxx/apera-frontend/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xiangliu/Development/Projects/xxx/apera-frontend/node_modules/sass-resources-loader/lib/loader.js","mtime":499162500000},{"path":"/Users/xiangliu/Development/Projects/xxx/apera-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xiangliu/Development/Projects/xxx/apera-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmFwLW1hbmFnZS1wcm9kdWN0IHsKICAuYWRkLWJ0bi1jb250YWluZXIgewogICAgd2lkdGg6IDEwMCU7CiAgICBkaXNwbGF5OiBmbGV4OwogIH0KCiAgLnByb2R1Y3QtdGFibGUgewogICAgbWFyZ2luLXRvcDogMjBweDsKICB9Cn0K"},{"version":3,"sources":["ManageProduct.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0IA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"ManageProduct.vue","sourceRoot":"src/views/Manage","sourcesContent":["<template>\n  <div class=\"ap-manage-product\">\n    <!-- Add new product button 添加新产品按钮 -->\n    <div class=\"add-btn-container\">\n      <el-button type=\"primary\" @click=\"handleProductAdd\">ADD PRODUCT</el-button>\n    </div>\n\n    <!-- Product List Table 商品列表 -->\n    <el-table\n      class=\"product-table\"\n      max-height=\"650\"\n      :data=\"\n        productList.filter(\n          data => !search || data.productName.toLowerCase().includes(search.toLowerCase())\n        )\n      \"\n      style=\"width: 100%\"\n    >\n      <el-table-column\n        v-for=\"(config, index) in productTableConfig.rows\"\n        :key=\"index\"\n        :prop=\"config.key\"\n        :label=\"config.label\"\n        :width=\"config.width\"\n      >\n      </el-table-column>\n\n      <!-- Product Operation Column 商品操作列（修改，删除） -->\n      <el-table-column align=\"right\">\n        <template slot=\"header\" slot-scope=\"scope\">\n          <el-input v-model=\"search\" placeholder=\"Please enter keyword\" />\n          <span style=\"display: none\">{{ scope.$index }}</span>\n        </template>\n        <template slot-scope=\"scope\">\n          <el-button @click=\"handleProductEdit(scope.row)\">\n            Edit\n          </el-button>\n          <el-button type=\"danger\" @click=\"handleProductDelete(scope.row)\">\n            Delete\n          </el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <ap-addproduct-dialog\n      ref=\"addProductDialog\"\n      :mode=\"mode\"\n      :targetProduct=\"targetProduct\"\n    ></ap-addproduct-dialog>\n  </div>\n</template>\n<script>\nimport { mapGetters, mapActions } from \"vuex\";\nimport productTableConfig from \"./config/product_table_config.js\";\nimport AddProductDialog from \"./AddProductDialog\";\nimport productConfig from \"./config/product_config.js\";\nimport productApi from \"api/product\";\n\nexport default {\n  data() {\n    return {\n      mode: productConfig.MODE.NEW,\n      search: \"\",\n      productTableConfig,\n      targetProduct: null\n    };\n  },\n\n  computed: {\n    ...mapGetters([\"productList\", \"productCategoryList\"])\n  },\n\n  methods: {\n    handleProductAdd() {\n      this.mode = productConfig.MODE.NEW;\n      this.$refs.addProductDialog.dialogVisible = true;\n      this.targetProduct = {\n        productName: \"\",\n        productDesc: \"\",\n        productSpecs: \"\",\n        productWarranty: \"\",\n        productVideo: \"\",\n        productFeatures: \"\",\n        productPrice: \"\",\n        productCategory: [],\n        productApplication: [],\n        productParameter: [],\n        productImageList: []\n      };\n    },\n    handleProductEdit(product) {\n      this.mode = productConfig.MODE.EDIT;\n      this.$refs.addProductDialog.dialogVisible = true;\n      product.productImageList = JSON.parse(product.productImages);\n\n      product.productCategory = [];\n      product.productApplication = [];\n      product.productParameter = [];\n\n      this.productCategoryList.forEach(item => {\n        if (product.productId == item.productId && item.categoryType == \"Product\") {\n          product.productCategory.push(item.categoryId);\n        } else if (product.productId == item.productId && item.categoryType == \"Applications\") {\n          product.productApplication.push(item.categoryId);\n        } else if (product.productId == item.productId && item.categoryType == \"Parameters\") {\n          product.productParameter.push(item.categoryId);\n        }\n      });\n      this.targetProduct = product;\n    },\n    handleProductDelete(product) {\n      const productId = product.productId;\n      const productName = product.productName;\n\n      this.$confirm(`Do you want to delete \"${productName}\"? `, \"Delete Action\", {\n        distinguishCancelAndClose: true,\n        confirmButtonText: \"Delete\",\n        cancelButtonText: \"Cancel\"\n      }).then(() => {\n        productApi.deleteProduct(productId).then(() => {\n          this.getProductList();\n          this.$message({\n            type: \"success\",\n            message: \"Delete Success\"\n          });\n        });\n      });\n    },\n\n    ...mapActions([\"getProductList\"])\n  },\n\n  components: {\n    \"ap-addproduct-dialog\": AddProductDialog\n  }\n};\n</script>\n<style lang=\"less\" scoped>\n.ap-manage-product {\n  .add-btn-container {\n    width: 100%;\n    display: flex;\n  }\n\n  .product-table {\n    margin-top: 20px;\n  }\n}\n</style>\n"]}]}