{"remainingRequest":"/Users/xiangliu/Development/Projects/xxx/apera-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xiangliu/Development/Projects/xxx/apera-frontend/src/views/Manage/AddProductDialog.vue?vue&type=style&index=0&id=95e73394&lang=less&scoped=true&","dependencies":[{"path":"/Users/xiangliu/Development/Projects/xxx/apera-frontend/src/views/Manage/AddProductDialog.vue","mtime":1585430812525},{"path":"/Users/xiangliu/Development/Projects/xxx/apera-frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xiangliu/Development/Projects/xxx/apera-frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/xiangliu/Development/Projects/xxx/apera-frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/xiangliu/Development/Projects/xxx/apera-frontend/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xiangliu/Development/Projects/xxx/apera-frontend/node_modules/sass-resources-loader/lib/loader.js","mtime":499162500000},{"path":"/Users/xiangliu/Development/Projects/xxx/apera-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xiangliu/Development/Projects/xxx/apera-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5hcC1kaWFsb2cgewogIG92ZXJmbG93LXg6IHZpc2libGU7CiAgLmRpYWxvZy1pbm5lciB7CiAgICBtYXgtaGVpZ2h0OiA2MHZoOwogICAgb3ZlcmZsb3cteDogdmlzaWJsZTsKICAgIG92ZXJmbG93LXk6IGF1dG87CiAgICBwYWRkaW5nOiAwIDIwcHg7CiAgfQoKICAuZGlhbG9nLXBpY3R1cmUtdXBsb2FkIHsKICAgIHdpZHRoOiAxMDAlOwogICAgZGlzcGxheTogZmxleDsKICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDsKICAgIG1hcmdpbjogMTBweCAwOwogIH0KCiAgLmZvcm0taXRlbSB7CiAgICB3aWR0aDogMTAwJTsKICB9Cn0K"},{"version":3,"sources":["AddProductDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"AddProductDialog.vue","sourceRoot":"src/views/Manage","sourcesContent":["<template>\n  <el-dialog class=\"ap-dialog\" title=\"Edit Product\" :visible.sync=\"dialogVisible\" width=\"1100px\">\n    <div class=\"dialog-inner\">\n      <el-form :model=\"formData\" :rules=\"formRules\" ref=\"editProductForm\">\n        <!-- Name -->\n        <el-form-item label=\"Name\" :label-width=\"formLabelWidth\" prop=\"productName\">\n          <el-input v-model=\"formData.productName\"></el-input>\n        </el-form-item>\n\n        <!-- Price -->\n        <el-form-item label=\"Price\" :label-width=\"formLabelWidth\" prop=\"productPrice\">\n          <el-input v-model=\"formData.productPrice\"></el-input>\n        </el-form-item>\n\n        <!-- Parameter -->\n        <el-form-item label=\"Parameter\" :label-width=\"formLabelWidth\">\n          <el-select class=\"form-item\" v-model=\"formData.productParameter\" multiple>\n            <el-option\n              v-for=\"item in testFormData.parameterList\"\n              :key=\"item.value\"\n              :label=\"item.label\"\n              :value=\"item.value\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n\n        <!-- Category -->\n        <el-form-item label=\"Category\" :label-width=\"formLabelWidth\">\n          <el-select class=\"form-item\" v-model=\"formData.productCategory\" multiple>\n            <el-option\n              v-for=\"item in testFormData.categoryList\"\n              :key=\"item.value\"\n              :label=\"item.label\"\n              :value=\"item.value\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n\n        <!-- Application -->\n        <el-form-item label=\"Application\" :label-width=\"formLabelWidth\">\n          <el-select class=\"form-item\" v-model=\"formData.productApplication\" multiple>\n            <el-option\n              v-for=\"item in testFormData.applicationList\"\n              :key=\"item.value\"\n              :label=\"item.label\"\n              :value=\"item.value\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n      </el-form>\n\n      <!-- Pictures -->\n      <el-upload\n        class=\"dialog-picture-upload\"\n        action=\"\"\n        :http-request=\"onUploadImage\"\n        :before-upload=\"beforeUpload\"\n        list-type=\"picture-card\"\n      >\n        <i class=\"el-icon-plus\"></i>\n      </el-upload>\n\n      <!-- Rich Text Enter -->\n      <el-tabs class=\"dialog-tabs\" v-model=\"activeTabName\">\n        <!-- Description -->\n        <el-tab-pane label=\"Description\" name=\"1\">\n          <ap-texteditor v-model=\"formData.productDesc\" />\n        </el-tab-pane>\n\n        <!-- Feature -->\n        <el-tab-pane label=\"Feature\" name=\"2\">\n          <ap-texteditor v-model=\"formData.productFeature\" />\n        </el-tab-pane>\n\n        <!-- Speces -->\n        <el-tab-pane label=\"Specs\" name=\"3\">\n          <ap-texteditor v-model=\"formData.productSpecs\" />\n        </el-tab-pane>\n\n        <!-- Video -->\n        <el-tab-pane label=\"Video\" name=\"4\">\n          <ap-texteditor v-model=\"formData.productVideo\" />\n        </el-tab-pane>\n\n        <!-- Warrant -->\n        <el-tab-pane label=\"Warrant\" name=\"5\">\n          <ap-texteditor v-model=\"formData.productWarrant\" />\n        </el-tab-pane>\n      </el-tabs>\n    </div>\n    <div slot=\"footer\" class=\"dialog-footer\">\n      <el-button @click=\"dialogVisible = false\">Cancel</el-button>\n      <el-button type=\"primary\" @click=\"onSubmitClick\">Submit</el-button>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\nimport { v4 as uuidv4 } from \"uuid\";\nimport { uploadImage } from \"api/common\";\nimport TextEditor from \"components/TextEditor\";\nimport { checkDouble } from \"common/utils/validateRules\";\nimport { editProductForm as testFormData } from \"common/config/testData\";\n// import SYS_CONFIG from \"common/config\";\n\nexport default {\n  data() {\n    return {\n      // sysConfig: SYS_CONFIG,\n      activeTabName: \"1\",\n      dialogVisible: false,\n      formData: {\n        productName: \"\",\n        productDesc: \"\",\n        productSpecs: \"\",\n        productWarrant: \"\",\n        productVideo: \"\",\n        productFeature: \"\",\n        productPrice: \"\",\n        productCategory: [],\n        productApplication: [],\n        productParameter: []\n      },\n      formRules: {\n        productName: [{ required: true, message: \"Please enter a valid name\", trigger: \"blur\" }],\n        productPrice: [\n          { required: true, message: \"Please enter a valid price\", trigger: \"blur\" },\n          {\n            validator: checkDouble(\"Please enter a valid number with two decimal places\"),\n            trigger: \"blur\"\n          }\n        ]\n      },\n      formLabelWidth: \"100px\",\n      testFormData: testFormData,\n      uploadImageError: null\n    };\n  },\n\n  watch: {},\n\n  methods: {\n    onSubmitClick() {\n      this.$refs.editProductForm.validate(valid => {\n        console.log(valid);\n\n        if (valid) {\n          console.log(this.formData);\n        } else {\n          return false;\n        }\n      });\n    },\n\n    onUploadImage(req) {\n      let filetype = \"\";\n      if (req.file.type === \"image/png\") {\n        filetype = \"png\";\n      } else {\n        filetype = \"jpg\";\n      }\n\n      // 重命名要上传的文件\n      const keyname = \"\" + new Date() + uuidv4() + \".\" + filetype;\n\n      uploadImage({\n        file: req.file,\n        key: keyname\n      }).then(res => {\n        console.log(res);\n      });\n    },\n\n    // 验证文件合法性\n    beforeUpload(file) {\n      const isJPG = file.type === \"image/jpeg\" || file.type === \"image/png\";\n      const isLt2M = file.size / 1024 / 1024 < 5;\n\n      if (!isJPG) {\n        this.uploadImageError = \"Image type should be JPED or PNG\";\n      }\n\n      if (!isLt2M) {\n        this.uploadImageError = \"Image size should less than 5MB\";\n      }\n\n      console.log(this.uploadImageError);\n\n      return isJPG && isLt2M;\n    }\n  },\n\n  components: {\n    \"ap-texteditor\": TextEditor\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n.ap-dialog {\n  overflow-x: visible;\n  .dialog-inner {\n    max-height: 60vh;\n    overflow-x: visible;\n    overflow-y: auto;\n    padding: 0 20px;\n  }\n\n  .dialog-picture-upload {\n    width: 100%;\n    display: flex;\n    justify-content: flex-start;\n    margin: 10px 0;\n  }\n\n  .form-item {\n    width: 100%;\n  }\n}\n</style>\n"]}]}