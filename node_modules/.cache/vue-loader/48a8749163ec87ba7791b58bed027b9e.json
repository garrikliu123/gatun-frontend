{"remainingRequest":"/Users/xiangliu/Development/Projects/xxx/apera-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xiangliu/Development/Projects/xxx/apera-frontend/src/views/Login/index.vue?vue&type=style&index=0&id=aeba673c&lang=less&scoped=true&","dependencies":[{"path":"/Users/xiangliu/Development/Projects/xxx/apera-frontend/src/views/Login/index.vue","mtime":1586226056079},{"path":"/Users/xiangliu/Development/Projects/xxx/apera-frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xiangliu/Development/Projects/xxx/apera-frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/xiangliu/Development/Projects/xxx/apera-frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/xiangliu/Development/Projects/xxx/apera-frontend/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xiangliu/Development/Projects/xxx/apera-frontend/node_modules/sass-resources-loader/lib/loader.js","mtime":499162500000},{"path":"/Users/xiangliu/Development/Projects/xxx/apera-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xiangliu/Development/Projects/xxx/apera-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmFwLWRpYWxvZyB7CiAgb3ZlcmZsb3cteDogdmlzaWJsZTsKICAuZGlhbG9nLWlubmVyIHsKICAgIG1heC1oZWlnaHQ6IDYwdmg7CiAgICBvdmVyZmxvdy14OiB2aXNpYmxlOwogICAgb3ZlcmZsb3cteTogYXV0bzsKICAgIHBhZGRpbmc6IDAgMjBweDsKICB9CgogIC5mb3JtLWl0ZW0tcmlnaHQgewogICAgZGlzcGxheTogZmxleDsKICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7CiAgfQp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/Login","sourcesContent":["<template>\n  <el-dialog\n    class=\"ap-dialog\"\n    :title=\"mode == 'login' ? 'Log In' : 'Register'\"\n    :visible.sync=\"dialogVisible\"\n    width=\"1100px\"\n  >\n    <div class=\"dialog-inner\">\n      <el-form :model=\"formData\" :rules=\"formRules\" ref=\"editLoginForm\">\n        <!-- Name -->\n        <el-form-item label=\"Email\" :label-width=\"formLabelWidth\" prop=\"userEmail\">\n          <el-input v-model=\"formData.userEmail\" placeholder=\"Please enter email\"></el-input>\n        </el-form-item>\n\n        <el-form-item label=\"Password\" :label-width=\"formLabelWidth\" prop=\"userPassword\">\n          <el-input\n            v-model=\"formData.userPassword\"\n            show-password\n            placeholder=\"Please enter password\"\n          ></el-input>\n        </el-form-item>\n        <el-form-item v-if=\"mode == 'login'\" class=\"form-item-right\">\n          <el-checkbox v-model=\"remember\">Remember Me</el-checkbox>\n        </el-form-item>\n      </el-form>\n    </div>\n\n    <div slot=\"footer\" class=\"dialog-footer\">\n      <el-button @click=\"dialogVisible = false\">Cancel</el-button>\n      <el-button v-if=\"mode == 'login'\" type=\"primary\" @click=\"onSubmitClick\">Log In</el-button>\n      <el-button v-else type=\"primary\" @click=\"onRegisterClick\">Register</el-button>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\nimport { mapActions } from \"vuex\";\nimport userApi from \"api/user\";\nimport { validatePassword, validateEmail } from \"common/utils/validateRules\";\nexport default {\n  props: {\n    mode: {\n      default: \"login\",\n    },\n  },\n  data() {\n    return {\n      remember: false,\n      formData: {\n        userEmail: \"\",\n        userPassword: \"\",\n      },\n      dialogVisible: false,\n      formRules: {\n        userEmail: [\n          {\n            required: true,\n            message: \"Please enter a valid email\",\n            trigger: \"blur\",\n          },\n          {\n            validator: validateEmail,\n            trigger: \"blur\",\n          },\n        ],\n        userPassword: [\n          {\n            required: true,\n            message: \"Please enter a valid password\",\n            trigger: \"blur\",\n          },\n          {\n            validator: validatePassword,\n            trigger: \"blur\",\n          },\n        ],\n      },\n      formLabelWidth: \"100px\",\n    };\n  },\n\n  methods: {\n    onSubmitClick() {\n      this.$refs.editLoginForm.validate((valid) => {\n        if (valid) {\n          userApi.login(this.formData).then((res) => {\n            this.dialogVisible = false;\n            if (res.success) {\n              this.$message({\n                type: \"success\",\n                message: \"Login Success\",\n              });\n              this.setUser({\n                userEmail: this.formData.userEmail,\n                isManager: res.isManager ? res.isManager : false,\n              });\n            } else {\n              this.formData = {\n                userEmail: \"\",\n                userPassword: \"\",\n              };\n            }\n          });\n        }\n      });\n    },\n\n    onRegisterClick() {\n      this.$refs.editLoginForm.validate((valid) => {\n        if (valid) {\n          userApi.addUser(this.formData).then((res) => {\n            this.dialogVisible = false;\n            if (res.success) {\n              this.$message({\n                type: \"success\",\n                message: \"Register Success\",\n              });\n            }\n          });\n        }\n      });\n    },\n\n    ...mapActions([\"setUser\"]),\n  },\n};\n</script>\n\n<style lang=\"less\" scoped>\n.ap-dialog {\n  overflow-x: visible;\n  .dialog-inner {\n    max-height: 60vh;\n    overflow-x: visible;\n    overflow-y: auto;\n    padding: 0 20px;\n  }\n\n  .form-item-right {\n    display: flex;\n    justify-content: flex-end;\n  }\n}\n</style>\n"]}]}