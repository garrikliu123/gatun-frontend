{"remainingRequest":"/Users/xiangliu/Development/Projects/xxx/apera-frontend/node_modules/babel-loader/lib/index.js!/Users/xiangliu/Development/Projects/xxx/apera-frontend/node_modules/eslint-loader/index.js??ref--13-0!/Users/xiangliu/Development/Projects/xxx/apera-frontend/src/common/utils/validateRules.js","dependencies":[{"path":"/Users/xiangliu/Development/Projects/xxx/apera-frontend/src/common/utils/validateRules.js","mtime":1585343326527},{"path":"/Users/xiangliu/Development/Projects/xxx/apera-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xiangliu/Development/Projects/xxx/apera-frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/xiangliu/Development/Projects/xxx/apera-frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0IGZ1bmN0aW9uIGNoZWNrRG91YmxlKCkgewogIHZhciBtZXNzYWdlID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiAidmFsaWQgZG91YmxlIjsKICByZXR1cm4gZnVuY3Rpb24gKHJ1bGUsIHZhbHVlLCBjYWxsYmFjaykgewogICAgdmFyIG51bTIgPSAvXihbMS05XVtcZF17MCx9fDApKFwuXGR7MSwyfSk/JC87CiAgICB2YWx1ZSA9ICcnICsgdmFsdWU7CgogICAgaWYgKGlzTmFOKHZhbHVlKSB8fCAhbnVtMi50ZXN0KHZhbHVlKSkgewogICAgICBjYWxsYmFjayhuZXcgRXJyb3IobWVzc2FnZSkpOwogICAgfSBlbHNlIHsKICAgICAgY2FsbGJhY2soKTsKICAgIH0KICB9Owp9"},{"version":3,"sources":["/Users/xiangliu/Development/Projects/xxx/apera-frontend/src/common/utils/validateRules.js"],"names":["checkDouble","message","rule","value","callback","num2","isNaN","test","Error"],"mappings":"AAAA,OAAO,SAASA,WAAT,GAA+C;AAAA,MAA1BC,OAA0B,uEAAhB,cAAgB;AAClD,SAAO,UAACC,IAAD,EAAOC,KAAP,EAAcC,QAAd,EAA2B;AAC9B,QAAIC,IAAI,GAAG,iCAAX;AACAF,IAAAA,KAAK,GAAG,KAAKA,KAAb;;AACA,QAAIG,KAAK,CAACH,KAAD,CAAL,IAAgB,CAAEE,IAAI,CAACE,IAAL,CAAUJ,KAAV,CAAtB,EAAyC;AACrCC,MAAAA,QAAQ,CAAC,IAAII,KAAJ,CAAUP,OAAV,CAAD,CAAR;AACH,KAFD,MAEO;AACHG,MAAAA,QAAQ;AACX;AACJ,GARD;AAUH","sourcesContent":["export function checkDouble(message = \"valid double\") {\n    return (rule, value, callback) => {\n        var num2 = /^([1-9][\\d]{0,}|0)(\\.\\d{1,2})?$/\n        value = '' + value\n        if (isNaN(value) || !(num2.test(value))) {\n            callback(new Error(message));\n        } else {\n            callback();\n        }\n    }\n\n}"]}]}