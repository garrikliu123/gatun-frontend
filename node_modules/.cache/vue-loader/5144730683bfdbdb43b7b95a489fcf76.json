{"remainingRequest":"/Users/xiangliu/Development/Projects/xxx/apera-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xiangliu/Development/Projects/xxx/apera-frontend/src/views/Manage/AddCategoryDialog.vue?vue&type=style&index=0&id=3e4db057&lang=less&scoped=true&","dependencies":[{"path":"/Users/xiangliu/Development/Projects/xxx/apera-frontend/src/views/Manage/AddCategoryDialog.vue","mtime":1585545861204},{"path":"/Users/xiangliu/Development/Projects/xxx/apera-frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xiangliu/Development/Projects/xxx/apera-frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/xiangliu/Development/Projects/xxx/apera-frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/xiangliu/Development/Projects/xxx/apera-frontend/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xiangliu/Development/Projects/xxx/apera-frontend/node_modules/sass-resources-loader/lib/loader.js","mtime":499162500000},{"path":"/Users/xiangliu/Development/Projects/xxx/apera-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/xiangliu/Development/Projects/xxx/apera-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmFwLWRpYWxvZyB7CiAgb3ZlcmZsb3cteDogdmlzaWJsZTsKICAuZGlhbG9nLWlubmVyIHsKICAgIG1heC1oZWlnaHQ6IDYwdmg7CiAgICBvdmVyZmxvdy14OiB2aXNpYmxlOwogICAgb3ZlcmZsb3cteTogYXV0bzsKICAgIHBhZGRpbmc6IDAgMjBweDsKICB9CgogIC5mb3JtLWl0ZW0gewogICAgd2lkdGg6IDEwMCU7CiAgfQp9Cg=="},{"version":3,"sources":["AddCategoryDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"AddCategoryDialog.vue","sourceRoot":"src/views/Manage","sourcesContent":["<template>\n  <el-dialog\n    class=\"ap-dialog\"\n    title=\"Edit Category\"\n    :visible.sync=\"dialogVisible\"\n    width=\"1100px\"\n  >\n    <div class=\"dialog-inner\">\n      <el-form\n        :model=\"formData\"\n        :rules=\"formRules\"\n        ref=\"editCategoryForm\"\n      >\n        <!-- Name -->\n        <el-form-item\n          label=\"Name\"\n          :label-width=\"formLabelWidth\"\n          prop=\"categoryName\"\n        >\n          <el-input v-model=\"formData.categoryName\"></el-input>\n        </el-form-item>\n\n        <!-- Parameter -->\n        <el-form-item\n          label=\"Type\"\n          :label-width=\"formLabelWidth\"\n        >\n          <el-select\n            class=\"form-item\"\n            v-model=\"formData.categoryType\"\n            placeholder=\"Select the type\"\n          >\n            <el-option\n              v-for=\"item in categoryTableConfig.typeOptions\"\n              :key=\"item.value\"\n              :label=\"item.label\"\n              :value=\"item.value\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n      </el-form>\n    </div>\n    <div\n      slot=\"footer\"\n      class=\"dialog-footer\"\n    >\n      <el-button @click=\"dialogVisible = false\">Cancel</el-button>\n      <el-button\n        type=\"primary\"\n        @click=\"onSubmitClick\"\n      >Submit</el-button>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\nimport { mapActions } from \"vuex\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport categoryConfig from \"./config/category_config.js\";\nimport categoryApi from \"api/category\";\nimport categoryTableConfig from \"./config/category_table_config.js\";\n\nexport default {\n  props: {\n    mode: {\n      required: true\n    },\n    targetCategory: {\n      type: Object,\n      default() {\n        return null;\n      }\n    }\n  },\n  data() {\n    return {\n      categoryTableConfig,\n      dialogVisible: false,\n      formData: {\n        categoryName: \"\",\n        categoryType: categoryTableConfig.typeOptions[0].value\n      },\n      formRules: {\n        categoryName: [\n          {\n            required: true,\n            message: \"Please enter a valid name\",\n            trigger: \"blur\"\n          }\n        ]\n      },\n      formLabelWidth: \"100px\"\n    };\n  },\n\n  watch: {\n    targetCategory(category) {\n      if (category) {\n        Object.assign(this.formData, category);\n      }\n    }\n  },\n\n  methods: {\n    onSubmitClick() {\n      this.$refs.editCategoryForm.validate(valid => {\n        if (valid) {\n          if (this.mode === categoryConfig.MODE.NEW) {\n            console.log(\"new\");\n            const categoryId = uuidv4();\n            this.formData.categoryId = categoryId;\n            categoryApi.addCategory(this.formData).then(() => {\n              this.dialogVisible = false;\n              this.getCategoryList();\n            });\n          } else if (this.mode === categoryConfig.MODE.EDIT) {\n            console.log(\"edit\");\n            categoryApi.updateCategory(this.formData).then(() => {\n              this.dialogVisible = false;\n              this.getCategoryList();\n            });\n          }\n        }\n      });\n    },\n\n    ...mapActions([\"getCategoryList\"])\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n.ap-dialog {\n  overflow-x: visible;\n  .dialog-inner {\n    max-height: 60vh;\n    overflow-x: visible;\n    overflow-y: auto;\n    padding: 0 20px;\n  }\n\n  .form-item {\n    width: 100%;\n  }\n}\n</style>\n"]}]}